cba_settings_hasSettingsFile = 1;

enableDebugConsole[] = {"76561198141746661"};

#include "gui\defines.hpp"
#include "gui\controls.hpp"

class CfgFunctions {
	class P27 {
		class common {
			file = "functions\common";

			class getRandomRoadPositions {};
			class getVehicleClassNames {};
			class giveOrderToCivilian {};
			class getConfigPathFromClass {};
			class vehicleService {};
			class teleportToMhq {};

			class createIedOnRoads {};
			class createHouseUnits {};
			class createPatrolUnits {};
			class createCrowdUnits {};
			class createPatrolVehicles {};
			class createTurrets {};

			class createTask {};
			class cancelTask {};
		};

		class events {
			file = "functions\events";

			class unitSideUpdate {};
			class setMissionEvents {};
			class setPlayerEvents {};
			class addSpawnTriggerEventToVehicles {};
		};

		class gui {
			file = "functions\gui";

			class showGameVersion {};

			class showVehicleList {};
			class showVehiclePreview {};
			class updateVehicleList {};
			class vehiclePlacement {};

			class showVehicleService {};
			class updateItemsList {};
			class updateInvLoadBar {};
			class loadItemToCargo {};
		};

		class interaction {
			file = "functions\interaction";

			class createSelfAction {};
			class createClassAction {};
			class setPlayerActions {};
		};

		class sector {
			file = "functions\sector";

			class getNumberOfUnits {};
			class getRandomSectorPos {};
			
			class generateSectors {};
			class createSector {};
			class setSectorCaptureState {};

			class generateCheckpoints {};
			class createCheckpoint {};
			class setCheckpointCaptureState {};

			class clearSector {};
		};

		class external {
			file = "functions\external";

			class advancedTowingInit {
				postInit = 1
			};

			class advancedSlingLoadingInit {
				postInit = 1
			};
		};
	};
};

class CfgNotifications {
	class sectorCaptured {
		title = $STR_SECTOR_CAPTURED_TITLE;
		description = $STR_SECTOR_CAPTURED_DESC;
		iconPicture = "\A3\ui_f\data\GUI\Cfg\Notifications\tridentEnemy_ca.paa";
		color[] = {1, 1, 1, 1};
		duration = 7;
		priority = 0;
		sound = "taskAssigned";
		difficulty[] = {};
	};
};